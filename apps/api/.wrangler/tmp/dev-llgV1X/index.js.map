{
  "version": 3,
  "sources": ["../bundle-iNJs4b/checked-fetch.js", "../bundle-iNJs4b/strip-cf-connecting-ip-header.js", "../../../src/index.ts", "../../../../../node_modules/.pnpm/wrangler@3.114.14/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../node_modules/.pnpm/wrangler@3.114.14/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-iNJs4b/middleware-insertion-facade.js", "../../../../../node_modules/.pnpm/wrangler@3.114.14/node_modules/wrangler/templates/middleware/common.ts", "../bundle-iNJs4b/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/ekene/CascadeProjects/fidbak/apps/api/.wrangler/tmp/dev-llgV1X",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "export interface Env {\n  DB?: D1Database; // optional binding\n  FIDBAK_DASHBOARD_BASE?: string; // used in Slack footer link\n  FIDBAK_SLACK_WEBHOOK?: string; // fallback global webhook\n  FIDBAK_SLACK_CHANNEL?: string; // optional default channel\n}\n\ntype FeedbackRow = {\n  id: string;\n  site_id: string;\n  page_id: string;\n  rating: 'up' | 'down';\n  comment?: string;\n  email?: string;\n  context_json: unknown;\n  ip_hash: string;\n  created_at: string;\n};\n\n// In-memory storage for dev\nconst MEM: { feedback: FeedbackRow[] } = { feedback: [] };\nconst RATE: Map<string, number[]> = new Map(); // key = `${ip}|${siteId}` -> timestamps\n\n// Temporary site registry in-memory for dev. Replace with D1 `sites` table.\nconst SITES: Record<string, { name: string; hmac_secret?: string; cors?: string[] }> = {\n  'demo-site': {\n    name: 'Demo Site',\n    // In real env, require server-side signing using per-site secret not shared with client.\n    // For dev we can skip or set a known secret.\n    // hmac_secret: 'dev-secret',\n    cors: ['http://localhost:5173', 'http://localhost:5175', 'http://localhost:5181'],\n  },\n};\n\nfunction json(data: unknown, init: ResponseInit = {}, origin?: string) {\n  const h = new Headers(init.headers);\n  h.set('content-type', 'application/json; charset=utf-8');\n  // Dev CORS; later replace with per-site allowlist\n  if (origin) h.set('access-control-allow-origin', origin);\n  return new Response(JSON.stringify(data), { ...init, headers: h });\n}\n\nfunction cors(request: Request): { origin: string | undefined; isPreflight: boolean } {\n  const origin = request.headers.get('origin') || undefined;\n  const isPreflight = request.method === 'OPTIONS';\n  return { origin, isPreflight };\n}\n\nfunction ok(init: ResponseInit = {}, origin?: string) {\n  const h = new Headers(init.headers);\n  if (origin) h.set('access-control-allow-origin', origin);\n  return new Response('ok', { ...init, headers: h });\n}\n\nfunction notFound(origin?: string) {\n  const h = new Headers();\n  if (origin) h.set('access-control-allow-origin', origin);\n  return new Response('Not found', { status: 404, headers: h });\n}\n\nfunction bad(msg: string, origin?: string) {\n  const h = new Headers({ 'content-type': 'application/json; charset=utf-8' });\n  if (origin) h.set('access-control-allow-origin', origin);\n  return new Response(JSON.stringify({ error: msg }), { status: 400, headers: h });\n}\n\nfunction ipFrom(req: Request) {\n  return (\n    req.headers.get('cf-connecting-ip') ||\n    req.headers.get('x-forwarded-for') ||\n    (req as any).ip ||\n    ''\n  );\n}\n\nfunction hashIp(ip: string) {\n  // simple stable hash for dev; will be replaced with daily rotating salt\n  let h = 0;\n  for (let i = 0; i < ip.length; i++) h = (h * 31 + ip.charCodeAt(i)) >>> 0;\n  return String(h);\n}\n\nfunction rateLimit(ip: string, siteId: string, limit = 8, windowMs = 60_000) {\n  const key = `${ip}|${siteId}`;\n  const now = Date.now();\n  const arr = RATE.get(key) || [];\n  const kept = arr.filter((t) => now - t < windowMs);\n  if (kept.length >= limit) return false;\n  kept.push(now);\n  RATE.set(key, kept);\n  return true;\n}\n\nasync function hmacSHA256Hex(secret: string, payload: string): Promise<string> {\n  const enc = new TextEncoder();\n  const key = await crypto.subtle.importKey(\n    'raw',\n    enc.encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign'],\n  );\n  const sig = await crypto.subtle.sign('HMAC', key, enc.encode(payload));\n  const bytes = new Uint8Array(sig);\n  return Array.from(bytes)\n    .map((b) => b.toString(16).padStart(2, '0'))\n    .join('');\n}\n\nfunction corsForSite(siteId: string | undefined, origin: string | undefined): string | undefined {\n  if (!origin) return '*';\n  if (!siteId) return origin;\n  const site = SITES[siteId];\n  if (!site?.cors) return origin; // permissive in dev\n  return site.cors.includes(origin) ? origin : undefined;\n}\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    const url = new URL(request.url);\n    const { origin, isPreflight } = cors(request);\n\n    if (isPreflight) {\n      const h = new Headers({\n        'access-control-allow-origin': origin || '*',\n        'access-control-allow-methods': 'GET,POST,OPTIONS',\n        'access-control-allow-headers': 'content-type,x-fidbak-signature',\n      });\n      return new Response(null, { status: 204, headers: h });\n    }\n\n    if (url.pathname === '/' || url.pathname === '/v1/health') {\n      return json({ ok: true }, {}, origin || '*');\n    }\n\n    if (url.pathname === '/v1/feedback' && request.method === 'POST') {\n      const ip = ipFrom(request);\n      // Read raw body string for stable HMAC\n      let raw = '';\n      try {\n        raw = await request.text();\n      } catch {\n        return bad('invalid body', origin || '*');\n      }\n      let body: any;\n      try {\n        body = raw ? JSON.parse(raw) : {};\n      } catch {\n        return bad('invalid json', origin || '*');\n      }\n      const { siteId, pageId, rating } = body || {};\n      if (!siteId || !pageId || (rating !== 'up' && rating !== 'down')) {\n        return bad('missing fields', origin || '*');\n      }\n      // Per-request policy from client (optional)\n      const policy = (body && typeof body.policy === 'object') ? body.policy as any : undefined;\n      // CORS allow: prioritize policy.corsAllow if provided, otherwise site config\n      let allow = corsForSite(siteId, origin || undefined);\n      if (origin && policy?.corsAllow && Array.isArray(policy.corsAllow)) {\n        allow = policy.corsAllow.includes(origin) ? origin : allow;\n      }\n      if (!allow) {\n        return new Response('Forbidden', { status: 403 });\n      }\n      // Optional HMAC verification if site has secret configured\n      const site = await getSite(env, siteId);\n      const sig = request.headers.get('x-fidbak-signature') || '';\n      const secret = site?.hmac_secret;\n      const requireHmac = policy?.requireHmac === true || !!secret;\n      if (requireHmac && secret) {\n        const expect = await hmacSHA256Hex(secret, raw);\n        if (sig.toLowerCase() !== expect.toLowerCase()) {\n          return json({ accepted: false, reason: 'bad_signature' }, { status: 401 }, allow);\n        }\n      } else if (requireHmac) {\n        // requireHmac true but no site secret -> reject\n        return json({ accepted: false, reason: 'hmac_required' }, { status: 401 }, allow);\n      }\n      // IP allow list (if provided in policy)\n      if (policy?.ipAllow && Array.isArray(policy.ipAllow) && policy.ipAllow.length > 0) {\n        if (!policy.ipAllow.includes(ip)) {\n          return json({ accepted: false, reason: 'ip_forbidden' }, { status: 403 }, allow);\n        }\n      }\n      if (!rateLimit(ip, siteId)) {\n        return json({ accepted: false, reason: 'rate_limited' }, { status: 429 }, allow);\n      }\n      // Apply policy-defined rate limit if provided (cap values for safety)\n      if (policy?.rateLimit) {\n        const windowMs = Math.max(1_000, Math.min(10 * 60_000, Number(policy.rateLimit.windowMs || 60_000)));\n        const max = Math.max(1, Math.min(120, Number(policy.rateLimit.max || 8)));\n        const key = `${ip}|${siteId}|policy`;\n        const now = Date.now();\n        const arr = RATE.get(key) || [];\n        const kept = arr.filter((t) => now - t < windowMs);\n        if (kept.length >= max) {\n          return json({ accepted: false, reason: 'rate_limited_policy' }, { status: 429 }, allow);\n        }\n        kept.push(now);\n        RATE.set(key, kept);\n      }\n      const row: FeedbackRow = {\n        id: crypto.randomUUID(),\n        site_id: siteId,\n        page_id: pageId,\n        rating,\n        comment: typeof body.comment === 'string' ? body.comment.slice(0, 5000) : undefined,\n        email: typeof body.email === 'string' ? body.email.slice(0, 320) : undefined,\n        context_json: body.context || {},\n        ip_hash: hashIp(ip),\n        created_at: new Date().toISOString(),\n      };\n      await storeFeedback(env, row);\n      const destinations = Array.isArray(body.destinations)\n        ? (body.destinations as string[])\n        : body.destinations\n        ? [body.destinations]\n        : undefined;\n      ctx.waitUntil(\n        fanout(\n          env,\n          row,\n          destinations,\n          typeof body.webhookSecret === 'string' ? body.webhookSecret : undefined,\n          policy,\n        ).catch(() => {}),\n      );\n      return json({ accepted: true, id: row.id }, { status: 202 }, allow);\n    }\n\n    // GET /v1/sites/:id/feedback\n    const match = url.pathname.match(/^\\/v1\\/sites\\/([^/]+)\\/feedback$/);\n    if (match && request.method === 'GET') {\n      const siteId = decodeURIComponent(match[1] || '');\n      const allow = corsForSite(siteId, origin || undefined) || origin || '*';\n      const rating = url.searchParams.get('rating') as 'up' | 'down' | null;\n      const q = url.searchParams.get('q');\n      const limit = Math.min(100, Math.max(1, parseInt(url.searchParams.get('limit') || '50', 10)));\n      const offset = Math.max(0, parseInt(url.searchParams.get('offset') || '0', 10));\n\n      let items: FeedbackRow[];\n      let total = 0;\n      if (env.DB) {\n        try {\n          const stmt = env.DB.prepare(\n            `SELECT id, site_id, page_id, rating, comment, email, context_json, ip_hash, created_at\n             FROM feedback WHERE site_id = ?\n             ${rating ? 'AND rating = ?' : ''}\n             ${q ? 'AND comment LIKE ?' : ''}\n             ORDER BY datetime(created_at) DESC\n             LIMIT ? OFFSET ?`,\n          );\n          const binds: any[] = [siteId];\n          if (rating) binds.push(rating);\n          if (q) binds.push(`%${q}%`);\n          binds.push(limit, offset);\n          const res = await stmt.bind(...binds).all<FeedbackRow>();\n          items = (res.results as any) || [];\n\n          // Compute total with COUNT(*) using same filters\n          const countStmt = env.DB.prepare(\n            `SELECT COUNT(*) AS c FROM feedback WHERE site_id = ?\n             ${rating ? 'AND rating = ?' : ''}\n             ${q ? 'AND comment LIKE ?' : ''}`,\n          );\n          const countRes = await countStmt.bind(...[siteId, ...(rating ? [rating] : []), ...(q ? [`%${q}%`] : [])]).first<{ c: number }>();\n          total = Number(countRes?.c || 0);\n        } catch {\n          // Fallback to memory if DB not migrated yet\n          let all = MEM.feedback.filter((f) => f.site_id === siteId);\n          if (rating) all = all.filter((f) => f.rating === rating);\n          if (q) all = all.filter((f) => (f.comment || '').toLowerCase().includes(q.toLowerCase()));\n          total = all.length;\n          items = all.slice(offset, offset + limit);\n        }\n      } else {\n        let all = MEM.feedback.filter((f) => f.site_id === siteId);\n        if (rating) all = all.filter((f) => f.rating === rating);\n        if (q) all = all.filter((f) => (f.comment || '').toLowerCase().includes(q.toLowerCase()));\n        total = all.length;\n        items = all.slice(offset, offset + limit);\n      }\n      return json({ items, total, nextOffset: Math.min(total, offset + items.length) }, {}, allow);\n    }\n\n    // GET /v1/sites/:id/summary?days=7\n    const matchSummary = url.pathname.match(/^\\/v1\\/sites\\/([^/]+)\\/summary$/);\n    if (matchSummary && request.method === 'GET') {\n      const siteId = decodeURIComponent(matchSummary[1] || '');\n      const allow = corsForSite(siteId, origin || undefined) || origin || '*';\n      const days = Math.max(1, Math.min(90, parseInt(url.searchParams.get('days') || '7', 10)));\n      const sinceIso = new Date(Date.now() - days * 24 * 60 * 60 * 1000).toISOString();\n\n      if (env.DB) {\n        try {\n          const totalRow = await env.DB.prepare(\n            'SELECT COUNT(*) as c FROM feedback WHERE site_id = ?',\n          ).bind(siteId).first<{ c: number }>();\n          const windowRow = await env.DB.prepare(\n            `SELECT SUM(CASE WHEN rating='up' THEN 1 ELSE 0 END) as up,\n                    SUM(CASE WHEN rating='down' THEN 1 ELSE 0 END) as down\n             FROM feedback WHERE site_id = ? AND datetime(created_at) >= datetime(?)`,\n          ).bind(siteId, sinceIso).first<{ up: number; down: number }>();\n          const up = Number(windowRow?.up || 0);\n          const down = Number(windowRow?.down || 0);\n          const total = Number(totalRow?.c || 0);\n          return json({ total, lastN: { days, up, down, total: up + down } }, {}, allow);\n        } catch {}\n      }\n      // Memory fallback\n      const all = MEM.feedback.filter((f) => f.site_id === siteId);\n      const total = all.length;\n      const since = new Date(sinceIso).getTime();\n      const windowItems = all.filter((f) => new Date(f.created_at).getTime() >= since);\n      const up = windowItems.filter((f) => f.rating === 'up').length;\n      const down = windowItems.filter((f) => f.rating === 'down').length;\n      return json({ total, lastN: { days, up, down, total: up + down } }, {}, allow);\n    }\n\n    return notFound(origin || '*');\n  },\n} satisfies ExportedHandler<Env>;\n\n// ---------- storage helpers ----------\nasync function getSite(env: Env, siteId: string): Promise<{ hmac_secret?: string; cors?: string[] } | undefined> {\n  if (env.DB) {\n    try {\n      const row = await env.DB.prepare(\n        'SELECT hmac_secret, cors_json as cors_json FROM sites WHERE id = ?',\n      ).bind(siteId).first<{ hmac_secret?: string; cors_json?: string }>();\n      if (row) {\n        return { hmac_secret: row.hmac_secret, cors: row.cors_json ? JSON.parse(row.cors_json) : undefined };\n      }\n    } catch {}\n  }\n  return SITES[siteId];\n}\n\nasync function storeFeedback(env: Env, row: FeedbackRow) {\n  if (env.DB) {\n    try {\n      await env.DB.prepare(\n        `INSERT INTO feedback (id, site_id, page_id, rating, comment, email, context_json, ip_hash, created_at)\n         VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n      )\n        .bind(\n          row.id,\n          row.site_id,\n          row.page_id,\n          row.rating,\n          row.comment || null,\n          row.email || null,\n          JSON.stringify(row.context_json || {}),\n          row.ip_hash,\n          row.created_at,\n        )\n        .run();\n      return;\n    } catch {}\n  }\n  MEM.feedback.unshift(row);\n}\n\n// ---------- fanout ----------\nasync function fanout(\n  env: Env,\n  row: FeedbackRow,\n  destinations?: string[],\n  webhookSecret?: string,\n  policy?: any,\n) {\n  const all: string[] = [];\n  if (Array.isArray(destinations)) all.push(...destinations);\n  if (env.FIDBAK_SLACK_WEBHOOK) all.push(env.FIDBAK_SLACK_WEBHOOK);\n\n  await Promise.all(\n    all.map(async (url) => {\n      // basic redaction for logs\n      const redacted = url.replace(/(https:\\/\\/hooks\\.slack\\.com\\/services\\/)[^/]+\\/[^/]+\\/.+/, '$1***');\n      try {\n        if (/hooks\\.slack\\.com\\/services\\//.test(url)) {\n          console.log('fidbak: posting to Slack', redacted);\n          await postSlack(url, env, row, policy);\n        } else {\n          const body = JSON.stringify({ type: 'fidbak.feedback.v1', data: row });\n          const headers: Record<string, string> = { 'content-type': 'application/json' };\n          if (webhookSecret) {\n            headers['x-fidbak-signature'] = await hmacSHA256Hex(webhookSecret, body);\n          }\n          const resp = await fetch(url, { method: 'POST', headers, body });\n          if (!resp.ok) {\n            console.warn('fidbak: webhook non-2xx', redacted, resp.status);\n            try { console.warn('fidbak: webhook resp', await resp.text()); } catch {}\n          }\n        }\n      } catch (e) {\n        console.warn('fidbak: webhook error', redacted, (e as any)?.message || e);\n      }\n    }),\n  );\n}\n\nfunction makeSlackBlocks(env: Env, row: FeedbackRow) {\n  const ctx: any = row.context_json || {};\n  const rating = row.rating === 'up' ? '\uD83D\uDC4D' : '\uD83D\uDC4E';\n  const title = ctx.title || '';\n  const url = ctx.url || row.page_id;\n  const ref = ctx.referrer ? `Ref: ${ctx.referrer}` : '';\n  const scroll = typeof ctx.scrollPct === 'number' ? `Scroll: ${ctx.scrollPct}%` : '';\n  const subtitle = [title, row.page_id].filter(Boolean).join(' \u2022 ');\n  const footerLink = env.FIDBAK_DASHBOARD_BASE\n    ? `${env.FIDBAK_DASHBOARD_BASE}/?siteId=${encodeURIComponent(row.site_id)}&id=${encodeURIComponent(row.id)}`\n    : '';\n  const footer = [row.email || '', footerLink ? `<${footerLink}|Open>` : ''].filter(Boolean).join(' \u2022 ');\n  const blocks = [\n    { type: 'header', text: { type: 'plain_text', text: `${rating} Feedback on ${row.page_id}` } },\n    ...(row.comment ? [{ type: 'section', text: { type: 'mrkdwn', text: `*Comment*\\n${row.comment}` } }] : []),\n    { type: 'section', text: { type: 'mrkdwn', text: `*Page* <${url}|${subtitle}>` } },\n    ...(ref || scroll ? [{ type: 'context', elements: [{ type: 'mrkdwn', text: [ref, scroll].filter(Boolean).join(' \u2022 ') }] }] : []),\n    ...(footer ? [{ type: 'context', elements: [{ type: 'mrkdwn', text: footer }] }] : []),\n  ];\n  return blocks;\n}\n\nasync function postSlack(webhook: string, env: Env, row: FeedbackRow, policy?: any) {\n  const blocks = makeSlackBlocks(env, row);\n  const text = `${row.rating === 'up' ? '\uD83D\uDC4D' : '\uD83D\uDC4E'} Feedback on ${row.page_id}${row.comment ? `: ${row.comment}` : ''}`;\n  const payload: any = { text, blocks, username: 'fidbak', icon_emoji: ':speech_balloon:' };\n  const channel = policy?.slackChannel || env.FIDBAK_SLACK_CHANNEL;\n  if (channel) payload.channel = channel;\n  await fetch(webhook, {\n    method: 'POST',\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify(payload),\n  }).then(async (r) => {\n    const body = await r.text().catch(() => '');\n    console.log('fidbak: slack response', r.status, body);\n    if (!r.ok) {\n      console.warn('fidbak: slack webhook non-2xx', r.status);\n    }\n  }).catch((e) => {\n    console.warn('fidbak: slack webhook error', e?.message || e);\n  });\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/ekene/CascadeProjects/fidbak/apps/api/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/ekene/CascadeProjects/fidbak/node_modules/.pnpm/wrangler@3.114.14/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/ekene/CascadeProjects/fidbak/node_modules/.pnpm/wrangler@3.114.14/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/ekene/CascadeProjects/fidbak/apps/api/src/index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/ekene/CascadeProjects/fidbak/apps/api/.wrangler/tmp/bundle-iNJs4b/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/ekene/CascadeProjects/fidbak/node_modules/.pnpm/wrangler@3.114.14/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/ekene/CascadeProjects/fidbak/apps/api/.wrangler/tmp/bundle-iNJs4b/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/ekene/CascadeProjects/fidbak/apps/api/.wrangler/tmp/bundle-iNJs4b/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["up", "down", "total"]
}
